{
  "_Name": "Module",
  "body": [
    {
      "_Name": "Expr",
      "value": {
        "_Name": "Constant",
        "value": "'Convolutional neural network layers.'",
        "kind": "None"
      }
    },
    {
      "_Name": "Assign",
      "targets": [
        {
          "_Name": "Name",
          "id": "'__all__'",
          "ctx": {
            "_Name": "Store"
          }
        }
      ],
      "value": {
        "_Name": "List",
        "elts": [
          {
            "_Name": "Constant",
            "value": "'Conv1D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'Conv2D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'Conv3D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'Conv1DTranspose'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'Conv2DTranspose'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'Conv3DTranspose'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'MaxPool1D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'MaxPool2D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'MaxPool3D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'AvgPool1D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'AvgPool2D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'AvgPool3D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalMaxPool1D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalMaxPool2D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalMaxPool3D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalAvgPool1D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalAvgPool2D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'GlobalAvgPool3D'",
            "kind": "None"
          },
          {
            "_Name": "Constant",
            "value": "'ReflectionPad2D'",
            "kind": "None"
          }
        ],
        "ctx": {
          "_Name": "Load"
        }
      },
      "type_comment": "None"
    },
    {
      "_Name": "ImportFrom",
      "module": "'block'",
      "names": [
        {
          "_Name": "alias",
          "name": "'HybridBlock'",
          "asname": "None"
        }
      ],
      "level": "2"
    },
    {
      "_Name": "ImportFrom",
      "module": "None",
      "names": [
        {
          "_Name": "alias",
          "name": "'symbol'",
          "asname": "None"
        }
      ],
      "level": "3"
    },
    {
      "_Name": "ImportFrom",
      "module": "'base'",
      "names": [
        {
          "_Name": "alias",
          "name": "'numeric_types'",
          "asname": "None"
        }
      ],
      "level": "3"
    },
    {
      "_Name": "ImportFrom",
      "module": "'activations'",
      "names": [
        {
          "_Name": "alias",
          "name": "'Activation'",
          "asname": "None"
        }
      ],
      "level": "1"
    },
    {
      "_Name": "FunctionDef",
      "name": "'_infer_weight_shape'",
      "args": {
        "_Name": "arguments",
        "posonlyargs": [],
        "args": [
          {
            "_Name": "arg",
            "arg": "'op_name'",
            "annotation": "None",
            "type_comment": "None"
          },
          {
            "_Name": "arg",
            "arg": "'data_shape'",
            "annotation": "None",
            "type_comment": "None"
          },
          {
            "_Name": "arg",
            "arg": "'kwargs'",
            "annotation": "None",
            "type_comment": "None"
          }
        ],
        "vararg": "None",
        "kwonlyargs": [],
        "kw_defaults": [],
        "kwarg": "None",
        "defaults": []
      },
      "body": [
        {
          "_Name": "Assign",
          "targets": [
            {
              "_Name": "Name",
              "id": "'op'",
              "ctx": {
                "_Name": "Store"
              }
            }
          ],
          "value": {
            "_Name": "Call",
            "func": {
              "_Name": "Name",
              "id": "'getattr'",
              "ctx": {
                "_Name": "Load"
              }
            },
            "args": [
              {
                "_Name": "Name",
                "id": "'symbol'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Name",
                "id": "'op_name'",
                "ctx": {
                  "_Name": "Load"
                }
              }
            ],
            "keywords": []
          },
          "type_comment": "None"
        },
        {
          "_Name": "Assign",
          "targets": [
            {
              "_Name": "Name",
              "id": "'sym'",
              "ctx": {
                "_Name": "Store"
              }
            }
          ],
          "value": {
            "_Name": "Call",
            "func": {
              "_Name": "Name",
              "id": "'op'",
              "ctx": {
                "_Name": "Load"
              }
            },
            "args": [
              {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'symbol'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'var'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Constant",
                    "value": "'data'",
                    "kind": "None"
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'shape'",
                    "value": {
                      "_Name": "Name",
                      "id": "'data_shape'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            ],
            "keywords": [
              {
                "_Name": "keyword",
                "arg": "None",
                "value": {
                  "_Name": "Name",
                  "id": "'kwargs'",
                  "ctx": {
                    "_Name": "Load"
                  }
                }
              }
            ]
          },
          "type_comment": "None"
        },
        {
          "_Name": "Return",
          "value": {
            "_Name": "Subscript",
            "value": {
              "_Name": "Call",
              "func": {
                "_Name": "Attribute",
                "value": {
                  "_Name": "Name",
                  "id": "'sym'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "attr": "'infer_shape_partial'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "args": [],
              "keywords": []
            },
            "slice": {
              "_Name": "Index",
              "value": {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            },
            "ctx": {
              "_Name": "Load"
            }
          }
        }
      ],
      "decorator_list": [],
      "returns": "None",
      "type_comment": "None"
    },
    {
      "_Name": "ClassDef",
      "name": "'_Conv'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'HybridBlock'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Abstract nD convolution layer (private, used as implementation base).\\n\\n    This layer creates a convolution kernel that is convolved\\n    with the layer input to produce a tensor of outputs.\\n    If `use_bias` is `True`, a bias vector is created and added to the outputs.\\n    Finally, if `activation` is not `None`,\\n    it is applied to the outputs as well.\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space\\n        i.e. the number of output channels in the convolution.\\n    kernel_size : int or tuple/list of n ints\\n        Specifies the dimensions of the convolution window.\\n    strides: int or tuple/list of n ints,\\n        Specifies the strides of the convolution.\\n    padding : int or tuple/list of n ints,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    dilation: int or tuple/list of n ints,\\n        Specifies the dilation rate to use for dilated convolution.\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two convolution\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str,\\n        Dimension ordering of data and weight. Can be \\'NCW\\', \\'NWC\\', \\'NCHW\\',\\n        \\'NHWC\\', \\'NCDHW\\', \\'NDHWC\\', etc. \\'N\\', \\'C\\', \\'H\\', \\'W\\', \\'D\\' stands for\\n        batch, channel, height, width and depth dimensions respectively.\\n        Convolution is performed over \\'D\\', \\'H\\', and \\'W\\' dimensions.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias: bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer: str or `Initializer`\\n        Initializer for the bias vector.\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'op_name'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'adj'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'prefix'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'params'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": [
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'Convolution'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'_Conv'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'prefix'",
                    "value": {
                      "_Name": "Name",
                      "id": "'prefix'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'params'",
                    "value": {
                      "_Name": "Name",
                      "id": "'params'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "With",
              "items": [
                {
                  "_Name": "withitem",
                  "context_expr": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'name_scope'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [],
                    "keywords": []
                  },
                  "optional_vars": "None"
                }
              ],
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_channels'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_in_channels'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'isinstance'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'strides'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'numeric_types'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Name",
                          "id": "'strides'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "BinOp",
                        "left": {
                          "_Name": "Tuple",
                          "elts": [
                            {
                              "_Name": "Name",
                              "id": "'strides'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "op": {
                          "_Name": "Mult"
                        },
                        "right": {
                          "_Name": "Call",
                          "func": {
                            "_Name": "Name",
                            "id": "'len'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "args": [
                            {
                              "_Name": "Name",
                              "id": "'kernel_size'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "keywords": []
                        }
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": []
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'isinstance'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'numeric_types'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Name",
                          "id": "'padding'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "BinOp",
                        "left": {
                          "_Name": "Tuple",
                          "elts": [
                            {
                              "_Name": "Name",
                              "id": "'padding'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "op": {
                          "_Name": "Mult"
                        },
                        "right": {
                          "_Name": "Call",
                          "func": {
                            "_Name": "Name",
                            "id": "'len'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "args": [
                            {
                              "_Name": "Name",
                              "id": "'kernel_size'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "keywords": []
                        }
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": []
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'isinstance'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'dilation'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'numeric_types'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Name",
                          "id": "'dilation'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "BinOp",
                        "left": {
                          "_Name": "Tuple",
                          "elts": [
                            {
                              "_Name": "Name",
                              "id": "'dilation'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "op": {
                          "_Name": "Mult"
                        },
                        "right": {
                          "_Name": "Call",
                          "func": {
                            "_Name": "Name",
                            "id": "'len'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "args": [
                            {
                              "_Name": "Name",
                              "id": "'kernel_size'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          ],
                          "keywords": []
                        }
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": []
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_op_name'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'op_name'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_kwargs'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Dict",
                    "keys": [
                      {
                        "_Name": "Constant",
                        "value": "'kernel'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'stride'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'dilate'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'pad'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'num_filter'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'num_group'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'no_bias'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'layout'",
                        "kind": "None"
                      }
                    ],
                    "values": [
                      {
                        "_Name": "Name",
                        "id": "'kernel_size'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'strides'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'dilation'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'channels'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'groups'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "UnaryOp",
                        "op": {
                          "_Name": "Not"
                        },
                        "operand": {
                          "_Name": "Name",
                          "id": "'use_bias'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'layout'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ]
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Compare",
                    "left": {
                      "_Name": "Name",
                      "id": "'adj'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "ops": [
                      {
                        "_Name": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "_Name": "Constant",
                        "value": "None",
                        "kind": "None"
                      }
                    ]
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Subscript",
                          "value": {
                            "_Name": "Attribute",
                            "value": {
                              "_Name": "Name",
                              "id": "'self'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "attr": "'_kwargs'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "slice": {
                            "_Name": "Index",
                            "value": {
                              "_Name": "Constant",
                              "value": "'adj'",
                              "kind": "None"
                            }
                          },
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "Name",
                        "id": "'adj'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": []
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'dshape'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "List",
                      "elts": [
                        {
                          "_Name": "Constant",
                          "value": "0",
                          "kind": "None"
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "BinOp",
                      "left": {
                        "_Name": "Call",
                        "func": {
                          "_Name": "Name",
                          "id": "'len'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "args": [
                          {
                            "_Name": "Name",
                            "id": "'kernel_size'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          }
                        ],
                        "keywords": []
                      },
                      "op": {
                        "_Name": "Add"
                      },
                      "right": {
                        "_Name": "Constant",
                        "value": "2",
                        "kind": "None"
                      }
                    }
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Subscript",
                      "value": {
                        "_Name": "Name",
                        "id": "'dshape'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "slice": {
                        "_Name": "Index",
                        "value": {
                          "_Name": "Call",
                          "func": {
                            "_Name": "Attribute",
                            "value": {
                              "_Name": "Name",
                              "id": "'layout'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "attr": "'find'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "args": [
                            {
                              "_Name": "Constant",
                              "value": "'N'",
                              "kind": "None"
                            }
                          ],
                          "keywords": []
                        }
                      },
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Subscript",
                      "value": {
                        "_Name": "Name",
                        "id": "'dshape'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "slice": {
                        "_Name": "Index",
                        "value": {
                          "_Name": "Call",
                          "func": {
                            "_Name": "Attribute",
                            "value": {
                              "_Name": "Name",
                              "id": "'layout'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "attr": "'find'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "args": [
                            {
                              "_Name": "Constant",
                              "value": "'C'",
                              "kind": "None"
                            }
                          ],
                          "keywords": []
                        }
                      },
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'wshapes'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'_infer_weight_shape'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'op_name'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'dshape'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'_kwargs'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'weight'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'params'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'get'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Constant",
                        "value": "'weight'",
                        "kind": "None"
                      }
                    ],
                    "keywords": [
                      {
                        "_Name": "keyword",
                        "arg": "'shape'",
                        "value": {
                          "_Name": "Subscript",
                          "value": {
                            "_Name": "Name",
                            "id": "'wshapes'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "slice": {
                            "_Name": "Index",
                            "value": {
                              "_Name": "Constant",
                              "value": "1",
                              "kind": "None"
                            }
                          },
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      },
                      {
                        "_Name": "keyword",
                        "arg": "'init'",
                        "value": {
                          "_Name": "Name",
                          "id": "'weight_initializer'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      },
                      {
                        "_Name": "keyword",
                        "arg": "'allow_deferred_init'",
                        "value": {
                          "_Name": "Constant",
                          "value": "True",
                          "kind": "None"
                        }
                      }
                    ]
                  },
                  "type_comment": "None"
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'bias'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "Call",
                        "func": {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Attribute",
                            "value": {
                              "_Name": "Name",
                              "id": "'self'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "attr": "'params'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'get'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "args": [
                          {
                            "_Name": "Constant",
                            "value": "'bias'",
                            "kind": "None"
                          }
                        ],
                        "keywords": [
                          {
                            "_Name": "keyword",
                            "arg": "'shape'",
                            "value": {
                              "_Name": "Subscript",
                              "value": {
                                "_Name": "Name",
                                "id": "'wshapes'",
                                "ctx": {
                                  "_Name": "Load"
                                }
                              },
                              "slice": {
                                "_Name": "Index",
                                "value": {
                                  "_Name": "Constant",
                                  "value": "2",
                                  "kind": "None"
                                }
                              },
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          },
                          {
                            "_Name": "keyword",
                            "arg": "'init'",
                            "value": {
                              "_Name": "Name",
                              "id": "'bias_initializer'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            }
                          },
                          {
                            "_Name": "keyword",
                            "arg": "'allow_deferred_init'",
                            "value": {
                              "_Name": "Constant",
                              "value": "True",
                              "kind": "None"
                            }
                          }
                        ]
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'bias'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "Constant",
                        "value": "None",
                        "kind": "None"
                      },
                      "type_comment": "None"
                    }
                  ]
                },
                {
                  "_Name": "If",
                  "test": {
                    "_Name": "Compare",
                    "left": {
                      "_Name": "Name",
                      "id": "'activation'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "ops": [
                      {
                        "_Name": "IsNot"
                      }
                    ],
                    "comparators": [
                      {
                        "_Name": "Constant",
                        "value": "None",
                        "kind": "None"
                      }
                    ]
                  },
                  "body": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'act'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "Call",
                        "func": {
                          "_Name": "Name",
                          "id": "'Activation'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "args": [
                          {
                            "_Name": "Name",
                            "id": "'activation'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          }
                        ],
                        "keywords": [
                          {
                            "_Name": "keyword",
                            "arg": "'prefix'",
                            "value": {
                              "_Name": "BinOp",
                              "left": {
                                "_Name": "Name",
                                "id": "'activation'",
                                "ctx": {
                                  "_Name": "Load"
                                }
                              },
                              "op": {
                                "_Name": "Add"
                              },
                              "right": {
                                "_Name": "Constant",
                                "value": "'_'",
                                "kind": "None"
                              }
                            }
                          }
                        ]
                      },
                      "type_comment": "None"
                    }
                  ],
                  "orelse": [
                    {
                      "_Name": "Assign",
                      "targets": [
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'act'",
                          "ctx": {
                            "_Name": "Store"
                          }
                        }
                      ],
                      "value": {
                        "_Name": "Constant",
                        "value": "None",
                        "kind": "None"
                      },
                      "type_comment": "None"
                    }
                  ]
                }
              ],
              "type_comment": "None"
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'hybrid_forward'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'F'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'x'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": [
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'bias'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "Is"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'act'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Call",
                      "func": {
                        "_Name": "Name",
                        "id": "'getattr'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "args": [
                        {
                          "_Name": "Name",
                          "id": "'F'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'_op_name'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "keywords": []
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'x'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'weight'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": [
                      {
                        "_Name": "keyword",
                        "arg": "'name'",
                        "value": {
                          "_Name": "Constant",
                          "value": "'fwd'",
                          "kind": "None"
                        }
                      },
                      {
                        "_Name": "keyword",
                        "arg": "None",
                        "value": {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'_kwargs'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      }
                    ]
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'act'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Call",
                      "func": {
                        "_Name": "Name",
                        "id": "'getattr'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "args": [
                        {
                          "_Name": "Name",
                          "id": "'F'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'_op_name'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "keywords": []
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'x'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'weight'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'bias'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": [
                      {
                        "_Name": "keyword",
                        "arg": "'name'",
                        "value": {
                          "_Name": "Constant",
                          "value": "'fwd'",
                          "kind": "None"
                        }
                      },
                      {
                        "_Name": "keyword",
                        "arg": "None",
                        "value": {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'_kwargs'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      }
                    ]
                  },
                  "type_comment": "None"
                }
              ]
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'act'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "IsNot"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'act'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'act'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'act'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Return",
              "value": {
                "_Name": "Name",
                "id": "'act'",
                "ctx": {
                  "_Name": "Load"
                }
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'_alias'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Return",
              "value": {
                "_Name": "Constant",
                "value": "'conv'",
                "kind": "None"
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'__repr__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Name",
                  "id": "'s'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Constant",
                "value": "'{name}({mapping}, kernel_size={kernel}, stride={stride}'",
                "kind": "None"
              },
              "type_comment": "None"
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Name",
                  "id": "'len_kernel_size'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'len'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Subscript",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "slice": {
                      "_Name": "Index",
                      "value": {
                        "_Name": "Constant",
                        "value": "'kernel'",
                        "kind": "None"
                      }
                    },
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "type_comment": "None"
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Subscript",
                  "value": {
                    "_Name": "Attribute",
                    "value": {
                      "_Name": "Name",
                      "id": "'self'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "attr": "'_kwargs'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "slice": {
                    "_Name": "Index",
                    "value": {
                      "_Name": "Constant",
                      "value": "'pad'",
                      "kind": "None"
                    }
                  },
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "NotEq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Constant",
                          "value": "0",
                          "kind": "None"
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Name",
                      "id": "'len_kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Constant",
                    "value": "', padding={pad}'",
                    "kind": "None"
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Subscript",
                  "value": {
                    "_Name": "Attribute",
                    "value": {
                      "_Name": "Name",
                      "id": "'self'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "attr": "'_kwargs'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "slice": {
                    "_Name": "Index",
                    "value": {
                      "_Name": "Constant",
                      "value": "'dilate'",
                      "kind": "None"
                    }
                  },
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "NotEq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Constant",
                          "value": "1",
                          "kind": "None"
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Name",
                      "id": "'len_kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Constant",
                    "value": "', dilation={dilate}'",
                    "kind": "None"
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "BoolOp",
                "op": {
                  "_Name": "And"
                },
                "values": [
                  {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'hasattr'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Constant",
                        "value": "'out_pad'",
                        "kind": "None"
                      }
                    ],
                    "keywords": []
                  },
                  {
                    "_Name": "Compare",
                    "left": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'out_pad'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "ops": [
                      {
                        "_Name": "NotEq"
                      }
                    ],
                    "comparators": [
                      {
                        "_Name": "BinOp",
                        "left": {
                          "_Name": "Tuple",
                          "elts": [
                            {
                              "_Name": "Constant",
                              "value": "0",
                              "kind": "None"
                            }
                          ],
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "op": {
                          "_Name": "Mult"
                        },
                        "right": {
                          "_Name": "Name",
                          "id": "'len_kernel_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      }
                    ]
                  }
                ]
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Constant",
                        "value": "', output_padding={out_pad}'",
                        "kind": "None"
                      },
                      "attr": "'format'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [],
                    "keywords": [
                      {
                        "_Name": "keyword",
                        "arg": "'out_pad'",
                        "value": {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'out_pad'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      }
                    ]
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Subscript",
                  "value": {
                    "_Name": "Attribute",
                    "value": {
                      "_Name": "Name",
                      "id": "'self'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "attr": "'_kwargs'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "slice": {
                    "_Name": "Index",
                    "value": {
                      "_Name": "Constant",
                      "value": "'num_group'",
                      "kind": "None"
                    }
                  },
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "NotEq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Constant",
                    "value": "', groups={num_group}'",
                    "kind": "None"
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'bias'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "Is"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Constant",
                    "value": "', bias=False'",
                    "kind": "None"
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Attribute",
                "value": {
                  "_Name": "Name",
                  "id": "'self'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "attr": "'act'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "body": [
                {
                  "_Name": "AugAssign",
                  "target": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Store"
                    }
                  },
                  "op": {
                    "_Name": "Add"
                  },
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Constant",
                        "value": "', {}'",
                        "kind": "None"
                      },
                      "attr": "'format'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'act'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  }
                }
              ],
              "orelse": []
            },
            {
              "_Name": "AugAssign",
              "target": {
                "_Name": "Name",
                "id": "'s'",
                "ctx": {
                  "_Name": "Store"
                }
              },
              "op": {
                "_Name": "Add"
              },
              "value": {
                "_Name": "Constant",
                "value": "')'",
                "kind": "None"
              }
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Name",
                  "id": "'shape'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Attribute",
                "value": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'weight'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "attr": "'shape'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "type_comment": "None"
            },
            {
              "_Name": "Return",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'format'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'name'",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'__class__'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'__name__'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'mapping'",
                    "value": {
                      "_Name": "Call",
                      "func": {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Constant",
                          "value": "'{0} -> {1}'",
                          "kind": "None"
                        },
                        "attr": "'format'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "args": [
                        {
                          "_Name": "IfExp",
                          "test": {
                            "_Name": "Subscript",
                            "value": {
                              "_Name": "Name",
                              "id": "'shape'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "slice": {
                              "_Name": "Index",
                              "value": {
                                "_Name": "Constant",
                                "value": "1",
                                "kind": "None"
                              }
                            },
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "body": {
                            "_Name": "Subscript",
                            "value": {
                              "_Name": "Name",
                              "id": "'shape'",
                              "ctx": {
                                "_Name": "Load"
                              }
                            },
                            "slice": {
                              "_Name": "Index",
                              "value": {
                                "_Name": "Constant",
                                "value": "1",
                                "kind": "None"
                              }
                            },
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "orelse": {
                            "_Name": "Constant",
                            "value": "None",
                            "kind": "None"
                          }
                        },
                        {
                          "_Name": "Subscript",
                          "value": {
                            "_Name": "Name",
                            "id": "'shape'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "slice": {
                            "_Name": "Index",
                            "value": {
                              "_Name": "Constant",
                              "value": "0",
                              "kind": "None"
                            }
                          },
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "keywords": []
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv1D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'1D convolution layer (e.g. temporal convolution).\\n\\n    This layer creates a convolution kernel that is convolved\\n    with the layer input over a single spatial (or temporal) dimension\\n    to produce a tensor of outputs.\\n    If `use_bias` is True, a bias vector is created and added to the outputs.\\n    Finally, if `activation` is not `None`,\\n    it is applied to the outputs as well.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 1 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 1 int,\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 1 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    dilation : int or tuple/list of 1 int\\n        Specifies the dilation rate to use for dilated convolution.\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout: str, default \\'NCW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCW\\' layout for now.\\n        \\'N\\', \\'C\\', \\'W\\' stands for batch, channel, and width (time) dimensions\\n        respectively. Convolution is applied on the \\'W\\' dimension.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, out_width)`\\n          when `layout` is `NCW`. out_width is calculated as::\\n\\n              out_width = floor((width+2*padding-dilation*(kernel_size-1)-1)/stride)+1\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "'NCW'",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCW' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Name",
                        "id": "'kernel_size'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 1 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv1D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'2D convolution layer (e.g. spatial convolution over images).\\n\\n    This layer creates a convolution kernel that is convolved\\n    with the layer input to produce a tensor of\\n    outputs. If `use_bias` is True,\\n    a bias vector is created and added to the outputs. Finally, if\\n    `activation` is not `None`, it is applied to the outputs as well.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 2 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 2 int,\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 2 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    dilation : int or tuple/list of 2 int\\n        Specifies the dilation rate to use for dilated convolution.\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str, default \\'NCHW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCHW\\' and \\'NHWC\\'\\n        layout for now. \\'N\\', \\'C\\', \\'H\\', \\'W\\' stands for batch, channel, height,\\n        and width dimensions respectively. Convolution is applied on the \\'H\\' and\\n        \\'W\\' dimensions.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, out_height, out_width)` when `layout` is `NCHW`.\\n          out_height and out_width are calculated as::\\n\\n              out_height = floor((height+2*padding[0]-dilation[0]*(kernel_size[0]-1)-1)/stride[0])+1\\n              out_width = floor((width+2*padding[1]-dilation[1]*(kernel_size[1]-1)-1)/stride[1])+1\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCHW' and 'NHWC' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'kernel_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "2",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 2 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv3D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'3D convolution layer (e.g. spatial convolution over volumes).\\n\\n    This layer creates a convolution kernel that is convolved\\n    with the layer input to produce a tensor of\\n    outputs. If `use_bias` is `True`,\\n    a bias vector is created and added to the outputs. Finally, if\\n    `activation` is not `None`, it is applied to the outputs as well.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 3 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 3 int,\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 3 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    dilation : int or tuple/list of 3 int\\n        Specifies the dilation rate to use for dilated convolution.\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str, default \\'NCDHW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCDHW\\' and \\'NDHWC\\'\\n        layout for now. \\'N\\', \\'C\\', \\'H\\', \\'W\\', \\'D\\' stands for batch, channel, height,\\n        width and depth dimensions respectively. Convolution is applied on the \\'D\\',\\n        \\'H\\' and \\'W\\' dimensions.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCDHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, out_depth, out_height, out_width)` when `layout` is `NCDHW`.\\n          out_depth, out_height and out_width are calculated as::\\n\\n              out_depth = floor((depth+2*padding[0]-dilation[0]*(kernel_size[0]-1)-1)/stride[0])+1\\n              out_height = floor((height+2*padding[1]-dilation[1]*(kernel_size[1]-1)-1)/stride[1])+1\\n              out_width = floor((width+2*padding[2]-dilation[2]*(kernel_size[2]-1)-1)/stride[2])+1\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCDHW' and 'NDHWC' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'kernel_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "3",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "3",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 3 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv3D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv1DTranspose'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Transposed 1D convolution layer (sometimes called Deconvolution).\\n\\n    The need for transposed convolutions generally arises\\n    from the desire to use a transformation going in the opposite direction\\n    of a normal convolution, i.e., from something that has the shape of the\\n    output of some convolution to something that has the shape of its input\\n    while maintaining a connectivity pattern that is compatible with\\n    said convolution.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 1 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 1 int\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 1 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    output_padding: int or a tuple/list of 1 int\\n        Controls the amount of implicit zero-paddings on both sides of the\\n        output for output_padding number of points for each dimension.\\n    dilation : int or tuple/list of 1 int\\n        Controls the spacing between the kernel points; also known as the\\n        a trous algorithm\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str, default \\'NCW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCW\\' layout for now.\\n        \\'N\\', \\'C\\', \\'W\\' stands for batch, channel, and width (time) dimensions\\n        respectively. Convolution is applied on the \\'W\\' dimension.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, out_width)`\\n          when `layout` is `NCW`. out_width is calculated as::\\n\\n              out_width = (width-1)*strides-2*padding+kernel_size+output_padding\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'output_padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "'NCW'",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCW' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Name",
                        "id": "'kernel_size'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'output_padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Name",
                        "id": "'output_padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 1 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'output_padding must be a number or a list of 1 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv1DTranspose'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'op_name'",
                    "value": {
                      "_Name": "Constant",
                      "value": "'Deconvolution'",
                      "kind": "None"
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'adj'",
                    "value": {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'outpad'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Name",
                "id": "'output_padding'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "type_comment": "None"
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv2DTranspose'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Transposed 2D convolution layer (sometimes called Deconvolution).\\n\\n    The need for transposed convolutions generally arises\\n    from the desire to use a transformation going in the opposite direction\\n    of a normal convolution, i.e., from something that has the shape of the\\n    output of some convolution to something that has the shape of its input\\n    while maintaining a connectivity pattern that is compatible with\\n    said convolution.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 2 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 2 int\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 2 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    output_padding: int or a tuple/list of 2 int\\n        Controls the amount of implicit zero-paddings on both sides of the\\n        output for output_padding number of points for each dimension.\\n    dilation : int or tuple/list of 2 int\\n        Controls the spacing between the kernel points; also known as the\\n        a trous algorithm\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str, default \\'NCHW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCHW\\' and \\'NHWC\\'\\n        layout for now. \\'N\\', \\'C\\', \\'H\\', \\'W\\' stands for batch, channel, height,\\n        and width dimensions respectively. Convolution is applied on the \\'H\\' and\\n        \\'W\\' dimensions.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, out_height, out_width)` when `layout` is `NCHW`.\\n          out_height and out_width are calculated as::\\n\\n              out_height = (height-1)*strides[0]-2*padding[0]+kernel_size[0]+output_padding[0]\\n              out_width = (width-1)*strides[1]-2*padding[1]+kernel_size[1]+output_padding[1]\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'output_padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCHW' and 'NHWC' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'kernel_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "2",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'output_padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'output_padding'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "2",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 2 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'output_padding must be a number or a list of 2 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv2DTranspose'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'op_name'",
                    "value": {
                      "_Name": "Constant",
                      "value": "'Deconvolution'",
                      "kind": "None"
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'adj'",
                    "value": {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'outpad'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Name",
                "id": "'output_padding'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "type_comment": "None"
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'Conv3DTranspose'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Conv'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Transposed 3D convolution layer (sometimes called Deconvolution).\\n\\n    The need for transposed convolutions generally arises\\n    from the desire to use a transformation going in the opposite direction\\n    of a normal convolution, i.e., from something that has the shape of the\\n    output of some convolution to something that has the shape of its input\\n    while maintaining a connectivity pattern that is compatible with\\n    said convolution.\\n\\n    If `in_channels` is not specified, `Parameter` initialization will be\\n    deferred to the first time `forward` is called and `in_channels` will be\\n    inferred from the shape of input data.\\n\\n\\n    Parameters\\n    ----------\\n    channels : int\\n        The dimensionality of the output space, i.e. the number of output\\n        channels (filters) in the convolution.\\n    kernel_size :int or tuple/list of 3 int\\n        Specifies the dimensions of the convolution window.\\n    strides : int or tuple/list of 3 int\\n        Specify the strides of the convolution.\\n    padding : int or a tuple/list of 3 int,\\n        If padding is non-zero, then the input is implicitly zero-padded\\n        on both sides for padding number of points\\n    output_padding: int or a tuple/list of 3 int\\n        Controls the amount of implicit zero-paddings on both sides of the\\n        output for output_padding number of points for each dimension.\\n    dilation : int or tuple/list of 3 int\\n        Controls the spacing between the kernel points; also known as the\\n        a trous algorithm.\\n    groups : int\\n        Controls the connections between inputs and outputs.\\n        At groups=1, all inputs are convolved to all outputs.\\n        At groups=2, the operation becomes equivalent to having two conv\\n        layers side by side, each seeing half the input channels, and producing\\n        half the output channels, and both subsequently concatenated.\\n    layout : str, default \\'NCDHW\\'\\n        Dimension ordering of data and weight. Only supports \\'NCDHW\\' and \\'NDHWC\\'\\n        layout for now. \\'N\\', \\'C\\', \\'H\\', \\'W\\', \\'D\\' stands for batch, channel, height,\\n        width and depth dimensions respectively. Convolution is applied on the \\'D\\',\\n        \\'H\\' and \\'W\\' dimensions.\\n    in_channels : int, default 0\\n        The number of input channels to this layer. If not specified,\\n        initialization will be deferred to the first time `forward` is called\\n        and `in_channels` will be inferred from the shape of input data.\\n    activation : str\\n        Activation function to use. See :func:`~mxnet.ndarray.Activation`.\\n        If you don\\'t specify anything, no activation is applied\\n        (ie. \"linear\" activation: `a(x) = x`).\\n    use_bias : bool\\n        Whether the layer uses a bias vector.\\n    weight_initializer : str or `Initializer`\\n        Initializer for the `weight` weights matrix.\\n    bias_initializer : str or `Initializer`\\n        Initializer for the bias vector.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCDHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, out_depth, out_height, out_width)` when `layout` is `NCDHW`.\\n          out_depth, out_height and out_width are calculated as::\\n\\n            out_depth = (depth-1)*strides[0]-2*padding[0]+kernel_size[0]+output_padding[0]\\n            out_height = (height-1)*strides[1]-2*padding[1]+kernel_size[1]+output_padding[1]\\n            out_width = (width-1)*strides[2]-2*padding[2]+kernel_size[2]+output_padding[2]\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'channels'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'kernel_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'output_padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'dilation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'groups'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'activation'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'use_bias'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'weight_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'bias_initializer'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'in_channels'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "1",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'zeros'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "\"Only supports 'NCDHW' and 'NDHWC' layout for now\"",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'kernel_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "3",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'output_padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'output_padding'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "3",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'kernel_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "3",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'kernel_size must be a number or a list of 3 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "3",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'output_padding must be a number or a list of 3 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'Conv3DTranspose'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'kernel_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'dilation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'groups'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'in_channels'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'activation'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'use_bias'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'weight_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'bias_initializer'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'op_name'",
                    "value": {
                      "_Name": "Constant",
                      "value": "'Deconvolution'",
                      "kind": "None"
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'adj'",
                    "value": {
                      "_Name": "Name",
                      "id": "'output_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'outpad'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Name",
                "id": "'output_padding'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "type_comment": "None"
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'_Pooling'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'HybridBlock'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Abstract class for different pooling layers.'",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'global_pool'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_type'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'count_include_pad'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'_Pooling'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'strides'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "Is"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'strides'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'strides'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'strides'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Call",
                      "func": {
                        "_Name": "Name",
                        "id": "'len'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "args": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "keywords": []
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'padding'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'padding'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Call",
                      "func": {
                        "_Name": "Name",
                        "id": "'len'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "args": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "keywords": []
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'_kwargs'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Dict",
                "keys": [
                  {
                    "_Name": "Constant",
                    "value": "'kernel'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'stride'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'pad'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'global_pool'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'pool_type'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'layout'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'pooling_convention'",
                    "kind": "None"
                  }
                ],
                "values": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'global_pool'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'pool_type'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "IfExp",
                    "test": {
                      "_Name": "Name",
                      "id": "'ceil_mode'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "body": {
                      "_Name": "Constant",
                      "value": "'full'",
                      "kind": "None"
                    },
                    "orelse": {
                      "_Name": "Constant",
                      "value": "'valid'",
                      "kind": "None"
                    }
                  }
                ]
              },
              "type_comment": "None"
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'count_include_pad'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "IsNot"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  }
                ]
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Subscript",
                      "value": {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'_kwargs'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "slice": {
                        "_Name": "Index",
                        "value": {
                          "_Name": "Constant",
                          "value": "'count_include_pad'",
                          "kind": "None"
                        }
                      },
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Name",
                    "id": "'count_include_pad'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'_alias'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Return",
              "value": {
                "_Name": "Constant",
                "value": "'pool'",
                "kind": "None"
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'hybrid_forward'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'F'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'x'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Return",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'F'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'Pooling'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'x'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'name'",
                    "value": {
                      "_Name": "Constant",
                      "value": "'fwd'",
                      "kind": "None"
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'__repr__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Name",
                  "id": "'s'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Constant",
                "value": "'{name}(size={kernel}, stride={stride}, padding={pad}, ceil_mode={ceil_mode}'",
                "kind": "None"
              },
              "type_comment": "None"
            },
            {
              "_Name": "AugAssign",
              "target": {
                "_Name": "Name",
                "id": "'s'",
                "ctx": {
                  "_Name": "Store"
                }
              },
              "op": {
                "_Name": "Add"
              },
              "value": {
                "_Name": "Constant",
                "value": "', global_pool={global_pool}, pool_type={pool_type}, layout={layout})'",
                "kind": "None"
              }
            },
            {
              "_Name": "Return",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'s'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'format'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'name'",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Attribute",
                        "value": {
                          "_Name": "Name",
                          "id": "'self'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "attr": "'__class__'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'__name__'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'ceil_mode'",
                    "value": {
                      "_Name": "Compare",
                      "left": {
                        "_Name": "Subscript",
                        "value": {
                          "_Name": "Attribute",
                          "value": {
                            "_Name": "Name",
                            "id": "'self'",
                            "ctx": {
                              "_Name": "Load"
                            }
                          },
                          "attr": "'_kwargs'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        },
                        "slice": {
                          "_Name": "Index",
                          "value": {
                            "_Name": "Constant",
                            "value": "'pooling_convention'",
                            "kind": "None"
                          }
                        },
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "ops": [
                        {
                          "_Name": "Eq"
                        }
                      ],
                      "comparators": [
                        {
                          "_Name": "Constant",
                          "value": "'full'",
                          "kind": "None"
                        }
                      ]
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'MaxPool1D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Max pooling operation for one dimensional data.\\n\\n\\n    Parameters\\n    ----------\\n    pool_size: int\\n        Size of the max pooling windows.\\n    strides: int, or None\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCW'\\n        Dimension ordering of data and out ('NCW' or 'NWC').\\n        'N', 'C', 'W' stands for batch, channel, and width (time) dimensions\\n        respectively. Pooling is applied on the W dimension.\\n    ceil_mode : bool, default False\\n        When `True`, will use ceil instead of floor to compute the output shape.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, out_width)`\\n          when `layout` is `NCW`. out_width is calculated as::\\n\\n              out_width = floor((width+2*padding-pool_size)/strides)+1\\n\\n          When `ceil_mode` is `True`, ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "2",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCW and NWC layouts are valid for 1D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Name",
                        "id": "'pool_size'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 1 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'MaxPool1D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'MaxPool2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Max pooling operation for two dimensional (spatial) data.\\n\\n\\n    Parameters\\n    ----------\\n    pool_size: int or list/tuple of 2 ints,\\n        Size of the max pooling windows.\\n    strides: int, list/tuple of 2 ints, or None.\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int or list/tuple of 2 ints,\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCHW'\\n        Dimension ordering of data and out ('NCHW' or 'NHWC').\\n        'N', 'C', 'H', 'W' stands for batch, channel, height, and width\\n        dimensions respectively. padding is applied on 'H' and 'W' dimension.\\n    ceil_mode : bool, default False\\n        When `True`, will use ceil instead of floor to compute the output shape.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, out_height, out_width)` when `layout` is `NCHW`.\\n          out_height and out_width are calculated as::\\n\\n              out_height = floor((height+2*padding[0]-pool_size[0])/strides[0])+1\\n              out_width = floor((width+2*padding[1]-pool_size[1])/strides[1])+1\\n\\n          When `ceil_mode` is `True`, ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCHW and NHWC layouts are valid for 2D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "2",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 2 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'MaxPool2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'MaxPool3D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Max pooling operation for 3D data (spatial or spatio-temporal).\\n\\n\\n    Parameters\\n    ----------\\n    pool_size: int or list/tuple of 3 ints,\\n        Size of the max pooling windows.\\n    strides: int, list/tuple of 3 ints, or None.\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int or list/tuple of 3 ints,\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCDHW'\\n        Dimension ordering of data and out ('NCDHW' or 'NDHWC').\\n        'N', 'C', 'H', 'W', 'D' stands for batch, channel, height, width and\\n        depth dimensions respectively. padding is applied on 'D', 'H' and 'W'\\n        dimension.\\n    ceil_mode : bool, default False\\n        When `True`, will use ceil instead of floor to compute the output shape.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, out_depth, out_height, out_width)` when `layout` is `NCDHW`.\\n          out_depth, out_height and out_width are calculated as::\\n\\n              out_depth = floor((depth+2*padding[0]-pool_size[0])/strides[0])+1\\n              out_height = floor((height+2*padding[1]-pool_size[1])/strides[1])+1\\n              out_width = floor((width+2*padding[2]-pool_size[2])/strides[2])+1\\n\\n          When `ceil_mode` is `True`, ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCDHW and NDHWC layouts are valid for 3D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "3",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "3",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 3 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'MaxPool3D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'AvgPool1D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Average pooling operation for temporal data.\\n\\n    Parameters\\n    ----------\\n    pool_size: int\\n        Size of the average pooling windows.\\n    strides: int, or None\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCW'\\n        Dimension ordering of data and out ('NCW' or 'NWC').\\n        'N', 'C', 'W' stands for batch, channel, and width (time) dimensions\\n        respectively. padding is applied on 'W' dimension.\\n    ceil_mode : bool, default False\\n        When `True`, will use ceil instead of floor to compute the output shape.\\n    count_include_pad : bool, default True\\n        When 'False', will exclude padding elements when computing the average value.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, out_width)`\\n          when `layout` is `NCW`. out_width is calculated as::\\n\\n              out_width = floor((width+2*padding-pool_size)/strides)+1\\n\\n          When `ceil_mode` is `True`, ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'count_include_pad'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "2",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCW and NWC layouts are valid for 1D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Name",
                        "id": "'pool_size'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "1",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 1 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'AvgPool1D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'count_include_pad'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'AvgPool2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Average pooling operation for spatial data.\\n\\n    Parameters\\n    ----------\\n    pool_size: int or list/tuple of 2 ints,\\n        Size of the average pooling windows.\\n    strides: int, list/tuple of 2 ints, or None.\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int or list/tuple of 2 ints,\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCHW'\\n        Dimension ordering of data and out ('NCHW' or 'NHWC').\\n        'N', 'C', 'H', 'W' stands for batch, channel, height, and width\\n        dimensions respectively. padding is applied on 'H' and 'W' dimension.\\n    ceil_mode : bool, default False\\n        When True, will use ceil instead of floor to compute the output shape.\\n    count_include_pad : bool, default True\\n        When 'False', will exclude padding elements when computing the average value.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, out_height, out_width)` when `layout` is `NCHW`.\\n          out_height and out_width are calculated as::\\n\\n              out_height = floor((height+2*padding[0]-pool_size[0])/strides[0])+1\\n              out_width = floor((width+2*padding[1]-pool_size[1])/strides[1])+1\\n\\n          When `ceil_mode` is `True`, ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'count_include_pad'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCHW and NHWC layouts are valid for 2D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "2",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 2 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'AvgPool2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'count_include_pad'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'AvgPool3D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Average pooling operation for 3D data (spatial or spatio-temporal).\\n\\n    Parameters\\n    ----------\\n    pool_size: int or list/tuple of 3 ints,\\n        Size of the average pooling windows.\\n    strides: int, list/tuple of 3 ints, or None.\\n        Factor by which to downscale. E.g. 2 will halve the input size.\\n        If `None`, it will default to `pool_size`.\\n    padding: int or list/tuple of 3 ints,\\n        If padding is non-zero, then the input is implicitly\\n        zero-padded on both sides for padding number of points.\\n    layout : str, default 'NCDHW'\\n        Dimension ordering of data and out ('NCDHW' or 'NDHWC').\\n        'N', 'C', 'H', 'W', 'D' stands for batch, channel, height, width and\\n        depth dimensions respectively. padding is applied on 'D', 'H' and 'W'\\n        dimension.\\n    ceil_mode : bool, default False\\n        When True, will use ceil instead of floor to compute the output shape.\\n    count_include_pad : bool, default True\\n        When 'False', will exclude padding elements when computing the average value.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCDHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, out_depth, out_height, out_width)` when `layout` is `NCDHW`.\\n          out_depth, out_height and out_width are calculated as::\\n\\n              out_depth = floor((depth+2*padding[0]-pool_size[0])/strides[0])+1\\n              out_height = floor((height+2*padding[1]-pool_size[1])/strides[1])+1\\n              out_width = floor((width+2*padding[2]-pool_size[2])/strides[2])+1\\n\\n          When `ceil_mode` is `True,` ceil will be used instead of floor in this\\n          equation.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'pool_size'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'strides'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'ceil_mode'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'count_include_pad'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Tuple",
                "elts": [
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "2",
                    "kind": "None"
                  }
                ],
                "ctx": {
                  "_Name": "Load"
                }
              },
              {
                "_Name": "Constant",
                "value": "None",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "False",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              },
              {
                "_Name": "Constant",
                "value": "True",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCDHW and NDHWC layouts are valid for 3D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "BinOp",
                    "left": {
                      "_Name": "Tuple",
                      "elts": [
                        {
                          "_Name": "Name",
                          "id": "'pool_size'",
                          "ctx": {
                            "_Name": "Load"
                          }
                        }
                      ],
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "op": {
                      "_Name": "Mult"
                    },
                    "right": {
                      "_Name": "Constant",
                      "value": "3",
                      "kind": "None"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'pool_size'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "3",
                    "kind": "None"
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'pool_size must be a number or a list of 3 ints'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'AvgPool3D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'pool_size'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'strides'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'ceil_mode'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "False",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'count_include_pad'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalMaxPool1D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Gloabl max pooling operation for one dimensional (temporal) data.\\n\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCW'\\n        Dimension ordering of data and out ('NCW' or 'NWC').\\n        'N', 'C', 'W' stands for batch, channel, and width (time) dimensions\\n        respectively. Pooling is applied on the W dimension.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, 1)`\\n          when `layout` is `NCW`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCW and NWC layouts are valid for 1D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalMaxPool1D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalMaxPool2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Global max pooling operation for two dimensional (spatial) data.\\n\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCHW'\\n        Dimension ordering of data and out ('NCHW' or 'NHWC').\\n        'N', 'C', 'H', 'W' stands for batch, channel, height, and width\\n        dimensions respectively. padding is applied on 'H' and 'W' dimension.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, 1, 1)` when `layout` is `NCHW`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCHW and NHWC layouts are valid for 2D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalMaxPool2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalMaxPool3D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Global max pooling operation for 3D data (spatial or spatio-temporal).\\n\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCDHW'\\n        Dimension ordering of data and out ('NCDHW' or 'NDHWC').\\n        'N', 'C', 'H', 'W', 'D' stands for batch, channel, height, width and\\n        depth dimensions respectively. padding is applied on 'D', 'H' and 'W'\\n        dimension.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, 1, 1, 1)` when `layout` is `NCDHW`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCDHW and NDHWC layouts are valid for 3D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalMaxPool3D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'max'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalAvgPool1D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Global average pooling operation for temporal data.\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCW'\\n        Dimension ordering of data and out ('NCW' or 'NWC').\\n        'N', 'C', 'W' stands for batch, channel, and width (time) dimensions\\n        respectively. padding is applied on 'W' dimension.\\n\\n\\n    Inputs:\\n        - **data**: 3D input tensor with shape `(batch_size, in_channels, width)`\\n          when `layout` is `NCW`. For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 3D output tensor with shape `(batch_size, channels, 1)`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCW and NWC layouts are valid for 1D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalAvgPool1D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalAvgPool2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Global average pooling operation for spatial data.\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCHW'\\n        Dimension ordering of data and out ('NCHW' or 'NHWC').\\n        'N', 'C', 'H', 'W' stands for batch, channel, height, and width\\n        dimensions respectively.\\n\\n\\n    Inputs:\\n        - **data**: 4D input tensor with shape\\n          `(batch_size, in_channels, height, width)` when `layout` is `NCHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 4D output tensor with shape\\n          `(batch_size, channels, 1, 1)` when `layout` is `NCHW`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCHW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCHW and NHWC layouts are valid for 2D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalAvgPool2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'GlobalAvgPool3D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'_Pooling'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "\"Global average pooling operation for 3D data (spatial or spatio-temporal).\\n\\n    Parameters\\n    ----------\\n    layout : str, default 'NCDHW'\\n        Dimension ordering of data and out ('NCDHW' or 'NDHWC').\\n        'N', 'C', 'H', 'W', 'D' stands for batch, channel, height, width and\\n        depth dimensions respectively. padding is applied on 'D', 'H' and 'W'\\n        dimension.\\n\\n\\n    Inputs:\\n        - **data**: 5D input tensor with shape\\n          `(batch_size, in_channels, depth, height, width)` when `layout` is `NCDHW`.\\n          For other layouts shape is permuted accordingly.\\n\\n    Outputs:\\n        - **out**: 5D output tensor with shape\\n          `(batch_size, channels, 1, 1, 1)` when `layout` is `NCDHW`.\\n    \"",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'layout'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "'NCDHW'",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Name",
                  "id": "'layout'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "ops": [
                  {
                    "_Name": "In"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "'NCDHW'",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "'NDHWC'",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ]
              },
              "msg": {
                "_Name": "Constant",
                "value": "'Only NCDHW and NDHWC layouts are valid for 3D Pooling'",
                "kind": "None"
              }
            },
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'GlobalAvgPool3D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "1",
                        "kind": "None"
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Constant",
                    "value": "None",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "0",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "True",
                    "kind": "None"
                  },
                  {
                    "_Name": "Constant",
                    "value": "'avg'",
                    "kind": "None"
                  },
                  {
                    "_Name": "Name",
                    "id": "'layout'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    },
    {
      "_Name": "ClassDef",
      "name": "'ReflectionPad2D'",
      "bases": [
        {
          "_Name": "Name",
          "id": "'HybridBlock'",
          "ctx": {
            "_Name": "Load"
          }
        }
      ],
      "keywords": [],
      "body": [
        {
          "_Name": "Expr",
          "value": {
            "_Name": "Constant",
            "value": "'Pads the input tensor using the reflection of the input boundary.\\n\\n    Parameters\\n    ----------\\n    padding: int\\n        An integer padding size\\n\\n\\n    Inputs:\\n        - **data**: input tensor with the shape :math:`(N, C, H_{in}, W_{in})`.\\n\\n    Outputs:\\n        - **out**: output tensor with the shape :math:`(N, C, H_{out}, W_{out})`, where\\n\\n          .. math::\\n\\n            H_{out} = H_{in} + 2 \\\\cdot padding\\n\\n            W_{out} = W_{in} + 2 \\\\cdot padding\\n\\n\\n    Examples\\n    --------\\n    >>> m = nn.ReflectionPad2D(3)\\n    >>> input = mx.nd.random.normal(shape=(16, 3, 224, 224))\\n    >>> output = m(input)\\n    '",
            "kind": "None"
          }
        },
        {
          "_Name": "FunctionDef",
          "name": "'__init__'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'padding'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": {
              "_Name": "arg",
              "arg": "'kwargs'",
              "annotation": "None",
              "type_comment": "None"
            },
            "defaults": [
              {
                "_Name": "Constant",
                "value": "0",
                "kind": "None"
              }
            ]
          },
          "body": [
            {
              "_Name": "Expr",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Call",
                    "func": {
                      "_Name": "Name",
                      "id": "'super'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    },
                    "args": [
                      {
                        "_Name": "Name",
                        "id": "'ReflectionPad2D'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "keywords": []
                  },
                  "attr": "'__init__'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "None",
                    "value": {
                      "_Name": "Name",
                      "id": "'kwargs'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            },
            {
              "_Name": "If",
              "test": {
                "_Name": "Call",
                "func": {
                  "_Name": "Name",
                  "id": "'isinstance'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'padding'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  {
                    "_Name": "Name",
                    "id": "'numeric_types'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": []
              },
              "body": [
                {
                  "_Name": "Assign",
                  "targets": [
                    {
                      "_Name": "Name",
                      "id": "'padding'",
                      "ctx": {
                        "_Name": "Store"
                      }
                    }
                  ],
                  "value": {
                    "_Name": "Tuple",
                    "elts": [
                      {
                        "_Name": "Constant",
                        "value": "0",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "0",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "0",
                        "kind": "None"
                      },
                      {
                        "_Name": "Constant",
                        "value": "0",
                        "kind": "None"
                      },
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      {
                        "_Name": "Name",
                        "id": "'padding'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      }
                    ],
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "type_comment": "None"
                }
              ],
              "orelse": []
            },
            {
              "_Name": "Assert",
              "test": {
                "_Name": "Compare",
                "left": {
                  "_Name": "Call",
                  "func": {
                    "_Name": "Name",
                    "id": "'len'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "args": [
                    {
                      "_Name": "Name",
                      "id": "'padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  ],
                  "keywords": []
                },
                "ops": [
                  {
                    "_Name": "Eq"
                  }
                ],
                "comparators": [
                  {
                    "_Name": "Constant",
                    "value": "8",
                    "kind": "None"
                  }
                ]
              },
              "msg": "None"
            },
            {
              "_Name": "Assign",
              "targets": [
                {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'self'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'_padding'",
                  "ctx": {
                    "_Name": "Store"
                  }
                }
              ],
              "value": {
                "_Name": "Name",
                "id": "'padding'",
                "ctx": {
                  "_Name": "Load"
                }
              },
              "type_comment": "None"
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        },
        {
          "_Name": "FunctionDef",
          "name": "'hybrid_forward'",
          "args": {
            "_Name": "arguments",
            "posonlyargs": [],
            "args": [
              {
                "_Name": "arg",
                "arg": "'self'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'F'",
                "annotation": "None",
                "type_comment": "None"
              },
              {
                "_Name": "arg",
                "arg": "'x'",
                "annotation": "None",
                "type_comment": "None"
              }
            ],
            "vararg": "None",
            "kwonlyargs": [],
            "kw_defaults": [],
            "kwarg": "None",
            "defaults": []
          },
          "body": [
            {
              "_Name": "Return",
              "value": {
                "_Name": "Call",
                "func": {
                  "_Name": "Attribute",
                  "value": {
                    "_Name": "Name",
                    "id": "'F'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  },
                  "attr": "'pad'",
                  "ctx": {
                    "_Name": "Load"
                  }
                },
                "args": [
                  {
                    "_Name": "Name",
                    "id": "'x'",
                    "ctx": {
                      "_Name": "Load"
                    }
                  }
                ],
                "keywords": [
                  {
                    "_Name": "keyword",
                    "arg": "'mode'",
                    "value": {
                      "_Name": "Constant",
                      "value": "'reflect'",
                      "kind": "None"
                    }
                  },
                  {
                    "_Name": "keyword",
                    "arg": "'pad_width'",
                    "value": {
                      "_Name": "Attribute",
                      "value": {
                        "_Name": "Name",
                        "id": "'self'",
                        "ctx": {
                          "_Name": "Load"
                        }
                      },
                      "attr": "'_padding'",
                      "ctx": {
                        "_Name": "Load"
                      }
                    }
                  }
                ]
              }
            }
          ],
          "decorator_list": [],
          "returns": "None",
          "type_comment": "None"
        }
      ],
      "decorator_list": []
    }
  ],
  "type_ignores": []
}

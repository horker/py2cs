{
  "UsingNamespaces": [
    "using System;",
    "using System.Linq;",
    "using System.Collections;",
    "using System.Collections.Generic;",
    "using System.Threading;",
    "using Horker.MXNet;",
    "using Horker.MXNet.Compat;",
    "using static Horker.MXNet.Base;",
    "using static Horker.MXNet.Compat.Compat;",
    "using static Horker.MXNet.Compat.Coercing;",
    "using static Horker.MXNet.Compat.Array;",
    "using static Horker.MXNet.MXNetCoercing;",
    "using static Horker.MXNet.MXNetCompat;",
    "using static Horker.MXNet.DType;",
    "using _LIB = Horker.MXNet.Interop._LIB;",
    "using NDArrayHandle = System.IntPtr;",
    "using SymbolHandle = System.IntPtr;",
    "using MxInt = System.Int32;",
    "using MxUint = System.Int32;",
    "using MxInt64 = System.Int64;",
    "using PySlice = Horker.MXNet.Compat.Slice;",
    "using Tuple = System.Collections.ICollection;",
    "using List = System.Collections.ICollection;"
  ],
  "Namespace": "Horker.MXNet",
  "Replacements": {
    "ndarray": "NDArray",
    "ctypes": "CTypes",
    "dtype": "DType",
    "stype": "SType",
    "uint8": "UInt8"
  },
  "TypeNames": {
    "NDArray": [
      "NDArray"
    ],
    "SymbolBase": [
      "SymbolBase"
    ],
    "Symbol": [
      "Symbol"
    ],
    "tuple": [
      "Tuple"
    ],
    "list": [
      "List<int>",
      "List<PySlice>",
      "IEnumerable<int>",
      "IEnumerable<PySlice>"
    ],
    "py_slice": [
      "PySlice"
    ],
    "mx_int": [
      "mx_int"
    ],
    "mx_uint": [
      "mx_uint"
    ],
    "integer_types": [
      "int",
      "long"
    ],
    "numeric_types": [
      "float",
      "int",
      "long"
    ]
  },
  "Classes": {
    "SymbolBase": {
      "Name": "SymbolBase",
      "BaseClasses": [
        "DisposableObject"
      ],
      "Fields": {
        "handle": {
          "Signature": "public SymbolHandle Handle { get; private set; }"
        }
      },
      "Methods": {
        "__init__": [
          {
            "Signature": "public SymbolBase(SymbolHandle handle)"
          }
        ],
        "__del__": [
          {
            "Signature": "protected override void DisposeUnmanaged()"
          }
        ],
        "_compose": [
          {
            "Signature": "internal void _compose(SymbolList args, string name = null)",
            "Locals": {
              "keys": {
                "Type": "string[]",
                "Definition": "string[] keys = null;"
              },
              "kwargs": {
                "Type": "Dictionary<string, IntPtr>",
                "Definition": "var kwargs = new Dictionary<string, IntPtr>();"
              }
            }
          }
        ],
        "_set_attr": [
          {
            "Signature": "internal void _setAttr(IDictionary<string, string> kwargs)"
          }
        ],
        "_set_handle": [
          {
            "Signature": "internal void _setHandle(SymbolHandle handle)"
          }
        ],
        "__reduce__": [
          {
            "Drop": true,
            "Signature": "internal object Reduce()"
          }
        ]
      }
    },
    "Helper": {
      "Name": "Helper",
      "BaseClasses": null,
      "Fields": {},
      "Methods": {
        "_set_symbol_class": [
          {
            "Drop": true,
            "Signature": "internal static object _setSymbolClass(object cls)"
          }
        ],
        "_symbol_creator": [
          {
            "Drop": true,
            "Signature": "internal static Symbol _symbolCreator(SymbolHandle handle, object args, object kwargs, IList<string> keys, IList<string> vals, string name)"
          }
        ]
      }
    }
  }
}

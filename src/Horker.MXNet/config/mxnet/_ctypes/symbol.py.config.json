{
  "UsingNamespaces": [
  ],
  "Namespace": "Horker.MXNet",
  "Replacements": {
  },
  "TypeNames": {
  },
  "Classes": {
    "SymbolBase": {
      "Name": "SymbolBase",
      "BaseClasses": [
        "DisposableObject"
      ],
      "Fields": {
        "handle": {
          "Signature": "public SymbolHandle Handle { get; private set; }"
        }
      },
      "Methods": {
        "__init__": [
          {
            "Signature": "public SymbolBase(SymbolHandle handle)"
          }
        ],
        "__del__": [
          {
            "Signature": "protected override void DisposeUnmanaged()"
          }
        ],
        "_compose": [
          {
            "Signature": "internal void _compose(SymbolList args, string name = null)",
            "Locals": {
              "keys": {
                "Type": "string[]",
                "Definition": "string[] keys = null;"
              },
              "kwargs": {
                "Type": "Dictionary<string, IntPtr>",
                "Definition": "var kwargs = new Dictionary<string, IntPtr>();"
              }
            }
          }
        ],
        "_set_attr": [
          {
            "Signature": "internal void _setAttr(IDictionary<string, string> kwargs)"
          }
        ],
        "_set_handle": [
          {
            "Signature": "internal void _setHandle(SymbolHandle handle)"
          }
        ],
        "__reduce__": [
          {
            "Drop": true,
            "Signature": "internal object Reduce()"
          }
        ]
      }
    },
    "Helper": {
      "Name": "Helper",
      "BaseClasses": null,
      "Fields": {},
      "Methods": {
        "_set_symbol_class": [
          {
            "Drop": true,
            "Signature": "internal static object _setSymbolClass(object cls)"
          }
        ],
        "_symbol_creator": [
          {
            "Drop": true,
            "Signature": "internal static Symbol _symbolCreator(SymbolHandle handle, object args, object kwargs, IList<string> keys, IList<string> vals, string name)"
          }
        ]
      }
    }
  }
}
